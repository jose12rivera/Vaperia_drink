@page "/Usuarios/Delete/{UsuarioId:int}"
@inject UsuarioService usuarioService
@inject NavigationManager navigationManager
@inject ToastService toastService
@rendermode InteractiveServer

<PageTitle>Eliminar Usuario</PageTitle>

<div class="container mt-5">
    <div class="card shadow-lg border-0">
        <div class="card-header text-center py-4" style="background-color: #dc3545; color: #fff;">
            <h2><i class="bi bi-exclamation-triangle me-2"></i> Confirmar Eliminación</h2>
        </div>

        <div class="card-body">
            @if (usuario != null)
            {
                <div class="alert alert-warning">
                    <h5>¿Está seguro que desea eliminar este usuario?</h5>
                    <p class="mb-0">Esta acción no se puede deshacer.</p>
                </div>

                <p><strong>Nombre completo:</strong> @usuario.NombreCompleto</p>
                <p><strong>Email:</strong> @usuario.Email</p>
                <p><strong>Rol:</strong> @usuario.Rol</p>
            }
            else
            {
                <div class="alert alert-danger text-center">
                    <i class="bi bi-exclamation-triangle me-2"></i> Usuario no encontrado.
                </div>
            }
        </div>

        <div class="card-footer text-center bg-light">
            @if (usuario != null)
            {
                <button class="btn btn-danger me-3" @onclick="EliminarUsuario">
                    <i class="bi bi-trash-fill me-2"></i> Confirmar Eliminación
                </button>
            }
            <button class="btn btn-secondary" @onclick="Volver">
                <i class="bi bi-arrow-left-circle-fill me-2"></i> Cancelar
            </button>
        </div>
    </div>
</div>

@code {
    [Parameter] public int UsuarioId { get; set; }
    private Usuarios? usuario;

    protected override async Task OnInitializedAsync()
    {
        usuario = await usuarioService.Buscar(UsuarioId);
    }

    private async Task EliminarUsuario()
    {
        if (usuario != null)
        {
            var ok = await usuarioService.Eliminar(usuario.UsuarioId);
            if (ok)
            {
                toastService.Notify(new ToastMessage(ToastType.Success, "Eliminación Exitosa", "Usuario eliminado correctamente."));
                await Task.Delay(1500);
                navigationManager.NavigateTo("/Usuarios/Index");
            }
            else
            {
                toastService.Notify(new ToastMessage(ToastType.Danger, "Error", "No se pudo eliminar el usuario."));
            }
        }
    }

    private void Volver() => navigationManager.NavigateTo("/Usuarios/Index");
}
