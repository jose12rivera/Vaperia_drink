@page "/Account/Login"
@using Microsoft.AspNetCore.Identity
@using Vaperia_drink.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager

<PageTitle>Inicio de Sesión - Vapería</PageTitle>

<div class="login-container">
    <div class="login-box">
        <img src="/logo-vaperia.png" alt="Logo Vapería" class="login-icon" />
        <h2>Vapería SAHARA</h2>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <EditForm Model="Input" OnValidSubmit="LoginUser" FormName="login">
            <DataAnnotationsValidator />

            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.Email"
                           class="form-control"
                           placeholder="correo@ejemplo.com" />
                <label>Correo Electrónico</label>
                <ValidationMessage For="() => Input.Email" class="text-danger" />
            </div>

            <div class="form-floating mb-3">
                <InputText type="password"
                           @bind-Value="Input.Password"
                           class="form-control"
                           placeholder="Contraseña" />
                <label>Contraseña</label>
                <ValidationMessage For="() => Input.Password" class="text-danger" />
            </div>

            <div class="checkbox-container mb-3">
                <label>
                    <InputCheckbox @bind-Value="Input.RememberMe" class="form-check-input" />
                    Recordarme
                </label>
            </div>

            <button type="submit" class="btn-submit">Iniciar Sesión</button>

            <div class="links">
                <p><a href="/Account/Register">¿No tienes cuenta? Regístrate</a></p>
                <p><a href="/Account/ForgotPassword">¿Olvidaste tu contraseña?</a></p>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private string? errorMessage;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(
            Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/Menu");
        }
        else
        {
            errorMessage = "Correo o contraseña incorrectos";
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "El correo es obligatorio")]
        [EmailAddress(ErrorMessage = "Correo inválido")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        public string Password { get; set; } = "";

        public bool RememberMe { get; set; }
    }
}