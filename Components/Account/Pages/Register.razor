@page "/Account/Register"
@using Vaperia_drink.Data
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager

<div class="login-container">
    <div class="login-box">
        <h2>Crear Cuenta - Vapería</h2>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        @if (!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success">@successMessage</div>
        }

        <EditForm Model="@Input" OnValidSubmit="RegisterUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group mb-3">
                <label>Correo Electrónico</label>
                <InputText class="form-control" @bind-Value="Input.Email" />
            </div>

            <div class="form-group mb-3">
                <label>Contraseña</label>
                <InputText type="password" class="form-control" @bind-Value="Input.Password" />
            </div>

            <div class="form-group mb-3">
                <label>Confirmar Contraseña</label>
                <InputText type="password" class="form-control" @bind-Value="Input.ConfirmPassword" />
            </div>

            <button type="submit" class="btn-submit">Guardar Usuario</button>
        </EditForm>

        <div class="links mt-3">
            <a href="/Account/Login">¿Ya tienes cuenta? Inicia sesión</a>
        </div>
    </div>
</div>

@code {
    private string? errorMessage;
    private string? successMessage;
    private InputModel Input = new();

    private async Task RegisterUser()
    {
        errorMessage = null;
        successMessage = null;

        if (Input.Password != Input.ConfirmPassword)
        {
            errorMessage = "Las contraseñas no coinciden";
            return;
        }

        var user = new ApplicationUser { UserName = Input.Email, Email = Input.Email };
        var result = await UserManager.CreateAsync(user, Input.Password);

        if (result.Succeeded)
        {
            successMessage = "Usuario registrado correctamente. Ahora puedes iniciar sesión.";
            Input = new InputModel(); // Limpiar formulario
        }
        else
        {
            errorMessage = string.Join(", ", result.Errors.Select(e => e.Description));
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "El correo es obligatorio")]
        [EmailAddress(ErrorMessage = "Correo inválido")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "La contraseña es obligatoria")]
        [MinLength(6, ErrorMessage = "Debe tener al menos 6 caracteres")]
        public string Password { get; set; } = "";

        [Required(ErrorMessage = "Confirma la contraseña")]
        public string ConfirmPassword { get; set; } = "";
    }
}
